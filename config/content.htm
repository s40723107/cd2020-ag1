<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>直播每周影片</h1>
<h2>w2</h2>
<p></p>
<p><br/><strong><span style="background-color: #ffffff; color: #000000;">分配工作流程表</span></strong></p>
<p><img alt="" height="378" src="/images/w2分配工作流程表.jpg" width="379"/></p>
<p></p>
<p><strong>w2會議影片</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JXUKf0cfJcc" width="560"></iframe></p>
<h2>w3</h2>
<p></p>
<p>會議影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QTfPD5bpeKc" width="560"></iframe></p>
<p>會議內容</p>
<p>主要講解python亂數分組程式,以及跟各個細分組長說明接下來必須同時對小組網站進行協同,小組長必須以pull request的方式將改版網站給組長,組長在選擇merge,解決可能合併會產生的問題</p>
<h2>w5</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ElNea4b1dX8" width="560"></iframe></p>
<p><strong>開會內容</strong></p>
<p><img alt="" height="230" src="/images/擷取.JPG" width="1209"/></p>
<p><b>webots tutorial分配</b></p>
<p><b><img alt="" height="463" src="/images/webots tutorial.JPG" width="845"/></b></p>
<p><strong>主要核心</strong></p>
<p>希望大家能夠摸熟coppelias及webots,並且練習onshape繪圖,充分利用onshape之好處,對於協同者是相當有利的一件事!</p>
<h2>w6</h2>
<h3>課程內容</h3>
<p><strong>1.需安裝OBSPortable.exe與yotube做配合,往後拍影片,頭像左下角需要有自己的影像</strong></p>
<p><strong>2.安裝pyslvs.exe,進行四連趕模擬,觀察連趕運動路徑</strong></p>
<p><strong><img alt="" height="906" src="/images/連趕模擬.JPG" width="1610"/></strong></p>
<h1>Assignment1</h1>
<h2>python 亂數分組</h2>
<p></p>
<p><img alt="" height="419" src="/images/亂數分組程式.JPG" width="846"/></p>
<p>亂數分組名單</p>
<p><img alt="" height="252" src="/images/亂數分組名單.JPG" width="641"/>影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dTUz8iy_ypY" width="560"></iframe></p>
<p>參考資料</p>
<p><a href="https://kk665403.pixnet.net/blog/post/403974404-%5Bpython%5D-python-ramdom%E9%9A%A8%E6%A9%9F%E4%BA%82%E6%95%B8%E7%B0%A1%E6%98%93%E7%94%A8%E6%B3%95?fbclid=IwAR05Kjm0u7LIJWtpdQrwENl1oUDM7uCW2tyVuki-TgGYtXhupVlsu2W52t4">https://kk665403.pixnet.net/blog/post/403974404-%5Bpython%5D-python-ramdom%E9%9A%A8%E6%A9%9F%E4%BA%82%E6%95%B8%E7%B0%A1%E6%98%93%E7%94%A8%E6%B3%95?fbclid=IwAR05Kjm0u7LIJWtpdQrwENl1oUDM7uCW2tyVuki-TgGYtXhupVlsu2W52t4</a></p>
<h2>了解四輪機器人</h2>
<h3>翻譯</h3>
<p>首先翻譯我們覺得比較有實用的內容</p>
<p>可碰撞物體<span>(Collidable objects)</span></p>
<p>可碰撞對像是可以測試互相碰撞的對象，即將記錄碰撞狀態的對象。這並不意味著它們將對碰撞做出響應（即可響應），這有所不同。可碰撞的對象包括：</p>
<p><span> </span>假人</p>
<p>形狀</p>
<p>超頻樹</p>
<p>點雲</p>
<p>由於基於點，因此虛擬對象和點雲只能與<span>OC</span>樹（基於體積）碰撞。</p>
<p>集合也是可碰撞的，因為它們可能包含可碰撞的對象。</p>
<p>可碰撞對象可以分別啟用或禁用其可碰撞屬性（默認情況下，對於非純形狀，<span>OC</span>樹和點雲啟用）。可以在對象的公共屬性中或通過<span>sim.setObjectSpecialProperty API</span>函數進行設置。</p>
<p>此外，可碰撞對象可以根據其相關的模型屬性（如果它們是模型的一部分）被覆蓋其可碰撞屬性。</p>
<p><span> </span></p>
<p>可測對象<span>(Measurable objects)</span></p>
<p>可測量對像是可用於與其他可測量對象進行最小距離計算的對象。它們包括：</p>
<p><span> </span>假人</p>
<p>形狀</p>
<p>超頻樹</p>
<p>點雲</p>
<p>集合也是可測量的，因為它們可能包含可測量的對象。</p>
<p>可測量對象可以分別啟用或禁用其可測量屬性（默認情況下，對於非純形狀，<span>OC</span>樹和點雲啟用）。可以在對象的公共屬性中或通過<span>sim.setObjectSpecialProperty API</span>函數進行設置。</p>
<p>此外，可測量對象可以根據其相關的模型屬性（如果它們是模型的一部分）而覆蓋其可測量屬性。</p>
<p><span> </span></p>
<p>可檢測物體<span>(Detectable objects)</span></p>
<p>可檢測物體是可以被接近傳感器檢測到的物體。它們包括：</p>
<p>假人</p>
<p>形狀</p>
<p>超頻樹</p>
<p>點雲</p>
<p>由於是基於點的虛擬和點雲，因此射線類型或隨機類型的接近傳感器無法檢測到。</p>
<p>可以通過所有接近傳感器，或僅通過特定類型的接近傳感器或接近傳感器的子類別來檢測可檢測到的物體，如下所示：</p>
<p>超聲波接近傳感器</p>
<p>紅外接近傳感器</p>
<p>激光接近傳感器</p>
<p>電感式接近傳感器</p>
<p>電容式接近傳感器</p>
<p>集合也是可檢測的，因為它們可能包含可檢測的對象。</p>
<p>可檢測的對象可以分別啟用或禁用其可檢測屬性，並且對於所有類型的接近傳感器（默認情況下對非純形狀啟用）都啟用此屬性。可以在對象的公共屬性中或通過<span>sim.setObjectSpecialProperty API</span>函數進行設置。</p>
<p>此外，可檢測對象可以根據其相關的模型屬性（如果它們是模型的一部分）被覆蓋其可檢測屬性。</p>
<p><span> </span></p>
<p>可渲染對象<span>(Renderable objects)</span></p>
<p>可渲染對像是視覺傳感器可以看到或檢測到的對象。它們包括：</p>
<p>形狀</p>
<p>路徑（但是必須啟用路徑整形功能）</p>
<p>圖形（僅呈現非靜態<span>3D</span>曲線）</p>
<p>超頻樹</p>
<p>點雲</p>
<p>集合也是可渲染的，因為它們可能包含可渲染的對象。</p>
<p>您可以使可渲染對象僅由特定的視覺傳感器看到可渲染對像還可以分別啟用或禁用其<span>renderable</span>屬性（默認情況下啟用，純圖形除外）。可以在對象的公共屬性中或通過<span>sim.setObjectSpecialProperty API</span>函數進行設置。</p>
<p>此外，可渲染對象可以根據其相關的模型屬性（如果它們是模型的一部分）而使其可渲染屬性被覆蓋。</p>
<p><span> </span></p>
<p>可視對象<span>(Viewable objects)</span></p>
<p>可見對像是可以瀏覽，查看或可以顯示某些圖像內容的對象。它們包括：</p>
<p>攝影機</p>
<p>視覺傳感器</p>
<p>可視對象可以與將顯示其圖像內容的視圖關聯。</p>
<p><span> </span></p>
<p>虛擬功能<span>(Dummy functions)</span></p>
<p>假人是多用途的對象。它們可以具有非常特定的功能，也可以僅用作輔助對象。以下偽函數是常見的：</p>
<p>用作點或參考系統：當您要跟蹤場景中特定點的位置和<span>/</span>或方向時，就是這種情況。虛擬位置可以與形狀頂點的位置匹配，例如，可以精確定位形狀：在頂點編輯模式下，從頂點創建虛擬對象，然後將形狀附加到虛擬對象（使虛擬對象成為父對象））。並且可以通過虛擬對象來操縱<span>/</span>定位形狀，該虛擬對象的位置與所選頂點相同。</p>
<p>用作模型的代理或支持對象：通過將對象標記為模型基礎標誌來定義模型。任何對像都可以作為模型的基礎，但是虛擬對像是該模型的首選對象。</p>
<p>用作標記點：例如，在評估機器人的工作空間時，可以在不同的時間間隔將假人放置在與機器人末端執行器相同的坐標上，最後可以提取所有添加的假人的凸包並顯示。有關更多詳細信息，請參閱凸包計算部分。</p>
<p>用於指定逆運動學計算中的末端執行器和末端執行器目標位置<span>/</span>方向：逆運動學計算模塊處理運動鏈。每個鏈都有一個基礎對象和一個提示對象。尖端對象必須是假人，並且用戶經常將尖端假人定位和定向為與機器人的末端執行器重合。同時，為了以逆運動學模式移動運動鏈，需要機器人末端執行器的目標位置<span>/</span>方向。同樣，將虛擬對像用作目標對象。</p>
<p>用於為動態模擬的機制創建循環閉合約束：有關更多詳細信息，請參考設計動態模擬的部分。</p>
<p>用作路徑跟隨對象：虛擬對像是唯一可以分配留在路徑上（在路徑上自由，自由滑動）或跟隨路徑位置（固定在路徑上，沿著路徑在其當前固有位置固定）的對象。</p>
<p><img alt="" height="135" src="/images/虛擬1.jpg" width="614"/></p>
<p></p>
<p>虛擬屬性<span>(Dummy properties)</span></p>
<p>虛擬屬性是場景對象屬性對話框的一部分，該對話框位於<span>[</span>菜單欄<span>-&gt;</span>工具<span>-&gt;</span>場景對象屬性<span>]</span>。還可以通過雙按場景層次結構中的對像圖標或單按其工具欄按鈕來打開對話框：</p>
<p><img alt="" height="37" src="/images/虛擬2.jpg" width="38"/></p>
<p>在場景對象屬性對話框中，單按“虛擬”按鈕以顯示虛擬對話框（“虛擬”按鈕僅在最後選擇的是虛擬對象時出現）。該對話框顯示最後選擇的虛擬對象的設置和參數。如果選擇了多個假人，則可以將某些參數從最後選擇的假人復製到其他選定的假人（適用於選擇按鈕）：</p>
<p><img alt="" height="419" src="/images/虛擬3.jpg" width="396"/></p>
<p>鏈接的虛擬對象：鏈接到此對象的虛擬對象。鏈接的虛擬對象（在場景和場景層次中，通過鏈接它們的彩色段很容易識別）具有特殊的屬性和行為，有關更多詳細信息，請參閱下一項。</p>
<p>鏈接類型：鏈接類型將指定仿真期間鏈接的虛擬對象的行為。如果指定了“動力學，重疊約束”，則這兩個虛擬實體將嘗試重疊各自的位置<span>/</span>方向以創建動力學迴路閉合約束。如果指定了<span>IK</span>，則指定了刀尖目標，則兩個鏈接的虛擬對象形成了用於反向運動學計算的刀尖目標對。</p>
<p>遵循主路徑的方向（唯一副路徑）：如果選中，則以路徑作為主（唯一副路徑）的虛擬對象將遵循該路徑的最接近貝塞爾曲線點的方向（而不是位置）。 另請參閱<span>sim.followPath API</span>函數（使用<span>sim.followPath</span>函數，不需要將虛擬對象與路徑作為主從關係）。</p>
<p>遵循主路徑<span>(</span>唯一主路徑<span>)</span>：如果選中該選項，並且假人的主路徑是路徑對象，則假人的位置和方向將由該路徑自動計算（即將從路徑的<span>Bezier</span>點進行插值）。</p>
<p>有兩種選擇：路徑自由或路徑固定。另請參閱<span>sim.followPath API</span>函數（使用<span>sim.followPath</span>函數，不需要將虛擬對象與路徑作為對象）。</p>
<p>路徑上自由：選中該對像後，會將具有路徑對像作為對象的虛擬對象分配為留在路徑上（保持與路徑的<span>Bezier</span>點相同的位置和方向），但可以沿路徑自由移動。它可以通過對像操縱模式沿路徑移動，也可以由逆運動學模塊自動沿路徑引導。</p>
<p>固定在路徑上：選中此選項後，會將具有路徑對像作為對象的虛擬對象分配為留在路徑上（與路徑的<span>Bezier</span>點保持相同的位置和方向），位於路徑的固有位置。一個比喻是在過山車的履帶部分上的貨車（將貨車拉起的初始部分）。在這種情況下，可以指定從路徑位置偏移的距離。</p>
<p>偏移量：將假人分配到路徑上的固定位置時，與路徑位置的距離偏移量。如果要創建履帶，則履帶的第一個墊板（剛性元件）將位於偏移量<span>0</span>處，第二個墊板將位於偏移量<span>x</span>處，第二個墊板將位於偏移量<span>2x</span>處，依此類推。</p>
<p>複製增量：添加到復制的虛擬對象的偏移量上的值（請參見上文）（例如，在創建毛毛蟲時，您可能需要幾十個墊板，每個墊板都可以自動計算出不同的偏移量）。</p>
<p>對像大小：假人的大小。該參數僅具有視覺效果，沒有功能意義。</p>
<p>調整虛擬顏色：允許調整虛擬顏色</p>
<p><span> </span></p>
<p>接近傳感器<span>(Proximity sensors)</span></p>
<p><span>CoppeliaSim</span>提供了一種非常強大而有效的方法來模擬接近傳感器。用戶可以為幾乎所有類型的接近傳感器建模，從超聲波到紅外等等。允許此功能的場景對像是接近傳感器（與視覺傳感器不同），可以檢測可檢測到的實體。下圖說明了使用接近傳感器的仿真：</p>
<p><img alt="" height="228" src="/images/傳感器1.jpg" width="600"/></p>
<p>接近傳感器通過<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>接近傳感器<span>]</span>添加到場景中。</p>
<p>接近傳感器使用的接近傳感器檢測例程也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span></p>
<p>接近傳感器的類型和操作模式<span>(Proximity sensor types and mode of operation)</span></p>
<p>接近傳感器有<span>6</span>種不同類型，可以在很大程度上進行定制：</p>
<p>射線型：射線型接近傳感器非常適合非常簡單的接近傳感器建模或激光測距儀建模。它們是最快的接近傳感器。</p>
<p>隨機射線型：隨機射線型接近傳感器用作隨機掃描圓錐體的射線型傳感器。它的外觀與錐形接近傳感器類似。</p>
<p>金字塔型：金字塔型接近傳感器非常適合對帶有矩形檢測體積的接近傳感器進行簡單建模。他們很快。</p>
<p>圓柱型：圓柱型接近傳感器非常適合對具有旋轉體積的檢測體積的接近傳感器進行簡單建模。他們很快。</p>
<p>圓盤式：圓盤式接近傳感器可對具有旋轉掃描檢測體積的接近傳感器進行精確建模。根據所選的精度和操作模式，它們可能需要更多的計算量。</p>
<p>圓錐型：圓錐型接近傳感器允許對大多數接近傳感器進行最佳，最精確的建模。根據所選的精度和操作模式，它們可能需要更多的計算量。</p>
<p><span> <img alt="" height="141" src="/images/傳感器2.jpg" width="631"/></span></p>
<p>接近傳感器以幾何上精確的方式運行：它們在其感測點（小球體）與任何干擾其檢測體積的可檢測實體之間執行精確的距離計算（像大多數傳感器一樣，它們在傳感體積邊緣之間不執行簡單的碰撞檢測其他模擬軟件，但在檢測範圍內進行精確的距離計算）。每個接近傳感器將計算以下最小距離：</p>
<p><img alt="" height="210" src="/images/傳感器3.jpg" width="612"/></p>
<p>如果接近傳感器檢測到物體，則會激活觸發器，這將導致對觸發器回調函數的調用。</p>
<p>接近傳感器的計算結果可以通過圖形對象記錄。</p>
<p><span> </span></p>
<p>視覺傳感器<span>(Vision sensors)</span></p>
<p>除了接近傳感器之外，<span>CoppeliaSim</span>還提供另一種傳感器：視覺傳感器。視覺傳感器是可見的對象，其操作方式與攝影機對象非常相似：它們將渲染其視場中的對象，並在指定的閾值被過度拍攝或拍攝不足時觸發檢測。可以檢測可渲染實體的視覺傳感器應主要在顏色，光線或結構在檢測過程中起作用的情況下，在接近傳感器上使用（例如，紅外傳感器，或更籠統地說，對光敏感的傳感器（相機等））。但是，根據運行應用程序的圖形卡或場景對象的複雜程度，視覺傳感器可能會比接近傳感器慢一些。下圖說明了使用視覺傳感器的應用：</p>
<p><span> <img alt="" height="179" src="/images/視覺1.jpg" width="600"/></span></p>
<p>確保不要將視覺傳感器與相機混淆。以下是主要區別：</p>
<p>視覺傳感器具有固定的分辨率。相機沒有特定的分辨率（即，它會自動調整為視圖尺寸）。</p>
<p>視覺傳感器的圖像內容可通過<span>API</span>訪問，圖像處理可通過視覺回調函數進行處理。無法通過<span>API</span>直接獲得相機的圖像內容。</p>
<p>視覺傳感器通常比攝像頭需要更多的<span>CPU</span>時間並且運行速度較慢。</p>
<p>視覺傳感器只能顯示可渲染的對象。攝像機可以顯示所有對像類型。</p>
<p><span> </span></p>
<p>視覺傳感器類型和操作模式<span>(Vision sensor types and mode of operation)</span></p>
<p>視覺傳感器分為<span>2</span>種類型，可以針對不同目的進行調整：</p>
<p>正射投影型：正射投影型視覺傳感器的視場為矩形。它們非常適合於近距離紅外傳感器或激光測距儀。</p>
<p>透視投影型：透視投影型視覺傳感器的視場是梯形的。它們非常適合於相機型傳感器。</p>
<p><img alt="" height="176" src="/images/視覺2.jpg" width="393"/></p>
<p>視覺傳感器是可見的對象，可以像相機對像一樣進行瀏覽<span>[</span>彈出菜單<span>-&gt;</span>視圖<span>-&gt;</span>將視圖與選定的視覺傳感器相關聯<span>]</span>。有關更多詳細信息，另請參見頁面和視圖部分。</p>
<p><span> <img alt="" height="311" src="/images/視覺3.jpg" width="487"/></span></p>
<p>視覺傳感器功能強大，可以以多種靈活方式使用。例如，它們可以用於顯示來自外部應用程序或插件的靜止或運動圖像。插件還可以提供定制的圖像處理算法以及評估算法（例如觸發條件）。視覺回調函數代表了可以進行圖像處理以及可以生成觸發器的機制（可以對觸發器回調函數中的觸發器做出反應）。</p>
<p>視覺傳感器只能渲染（和檢測）可渲染的實體。</p>
<p>力傳感器<span>(Force sensors)</span></p>
<p>力傳感器最初是兩個形狀之間的剛性鏈接，能夠測量傳遞的力和扭矩。力傳感器的剛性是有條件的，在某種意義上，如果出現某種條件（例如，如果力或扭矩閾值被超過），則力傳感器可能會損壞。</p>
<p><span> <img alt="" height="252" src="/images/力1.jpg" width="477"/></span></p>
<p>力傳感器測量三個<span>3</span>對值，分別代表沿<span>x</span>，<span>y</span>和<span>z</span>軸施加在傳感器上的力以及圍繞<span>x</span>，<span>y</span>和<span>z</span>軸施加在傳感器上的扭矩：</p>
<p><img alt="" height="194" src="/images/力2.jpg" width="267"/></p>
<p>最初，力傳感器充當剛性連接。然而，在模擬過程中，當超過指定的力<span>/</span>扭矩閾值或滿足某些其他用戶定義的條件時，力傳感器可能會損壞。下圖說明了力傳感器的損壞狀態：</p>
<p><span> <img alt="" height="222" src="/images/力3.jpg" width="478"/></span></p>
<p>如果動態啟用了力傳感器，則它只能在仿真期間運行。 有關動態啟用的力傳感器的更多信息，另請參閱有關設計動態仿真的部分。 關節也能夠測量力或扭矩，但是只能沿/繞其z軸測量。</p>
<p>力傳感器通過[菜單欄-&gt;添加-&gt;力傳感器]添加到場景中。</p>
<p></p>
<p>路徑<span>(Paths)</span></p>
<p>路徑是定義空間中的路徑或軌蹟的對象。它可以用於各種任務，如下圖所示：</p>
<p><span> <img alt="" height="328" src="/images/路徑1.jpg" width="600"/></span></p>
<p>可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>路徑<span>]</span>將路徑對象添加到場景中。默認情況下，有兩個基本路徑可用：簡單的段類型路徑或圓形類型路徑。它們可以定向或縮放，但是通常這還不夠。用戶可以使用幾種方法來生成定制的路徑對象：</p>
<p>從文件導入路徑。</p>
<p>編輯路徑。</p>
<p>從形狀的邊緣生成路徑。有關詳細信息，請參見邊緣編輯模式。</p>
<p>路徑本身並沒有多大作用。它們通常與假人和其他物體結合使用以獲得所需的效果。要沿路徑移動對象，首先需要將虛擬對象分配給路徑，然後可以將對象附著到虛擬對象，該對象將遵循路徑的固有移動。有關更多詳細信息，請參閱關於虛擬變量的部分。</p>
<p>路徑是可渲染的對象，這意味著視覺傳感器可以看到路徑。但是，需要啟用路徑整形功能。可以在對象公共屬性中更改路徑的可渲染屬性。</p>
<p>某些路徑數據可以由圖形對象記錄。</p>
<p></p>
<p>路徑控制點和貝塞爾曲線點<span>(Control points and Bezier points)</span></p>
<p>路徑具有位置和方向分量（或通道），還可以另外具有描述速度曲線的分量。路徑由控制點定義，這些控制點將路徑描述為一系列鏈接的段。僅當選擇路徑時，控制點才可見：</p>
<p><span><img alt="" height="107" src="/images/路徑2.jpg" width="595"/><br/></span></p>
<p>路徑的第一個控制點（起點）表示為球體，其餘的控制點表示為立方體。路徑可以是開放的或封閉的。當關閉時，它變成循環的。</p>
<p><img alt="" height="102" src="/images/路徑3.jpg" width="292"/></p>
<p>每個控制點都具有可以更詳細地描述路徑的屬性：每個控制點都可以描述是否以及如何計算貝塞爾曲線。</p>
<p><span><img alt="" height="134" src="/images/路徑4.jpg" width="600"/><br/></span></p>
<p>默認情況下，貝塞爾曲線點始終可見（即使未選擇對象時），並顯示為紅色，綠色和藍色的小箭頭，指示貝塞爾曲線點的<span>x</span>軸，<span>y</span>軸和<span>z</span>軸（實際上是取向）。貝塞爾曲線部分由<span>3</span>個參數描述</p>
<p><span> <img alt="" height="170" src="/images/路徑5.jpg" width="419"/></span></p>
<p><span>Bezier</span>插值因子指示<span>Bezier</span>曲線部分的起點和終點，而<span>Bezier</span>點數指示曲線的詳細程度（或平滑度）。<span> Bezier</span>點計數為<span>1</span>在技術上禁用了<span>Bezier</span>曲線插值機制，但為簡單起見，該控制點被稱為<span>Bezier</span>點。</p>
<p>可以在路徑編輯模式下手動調整控制點的位置和方向。但是不能單獨調整<span>Bezier</span>點的方向。它是自動計算的。默認情況下，貝塞爾曲線點的方向將遵循路徑曲率（如果啟用了自動方向選項），否則它們將與控制點的方向進行插值</p>
<p><span> <img alt="" height="170" src="/images/路徑6.jpg" width="419"/></span></p>
<p><span> </span></p>
<p>路徑位置和長度計算方法<span>(Path position and length calculation methods)</span></p>
<p>沿著路徑對象，可以定義固有位置。該位置（也稱為路徑位置）與路徑對象的位置不同。雖然路徑對象的位置是路徑對象原點的位置（在選擇路徑時顯示為白色線框立方體），但是路徑位置或固有路徑位置是沿路徑的位置值</p>
<p><span><img alt="" height="179" src="/images/路徑7.jpg" width="429"/> </span></p>
<p>路徑的<span>Bezier</span>點可以是不同的，也可以是重合的：想像一個焊接機器人，其末端執行器是焊接設備的尖端；在兩個連續的<span>Bezier</span>點之間，末端執行器可以：<span> </span></p>
<p>在不改變方向的情況下執行平移（即沿著直線）（兩個<span>Bezier</span>點是不同的，但方向相同）。</p>
<p>執行平移並更改方向（兩個<span>Bezier</span>點是不同的，並且方向不同）。</p>
<p>在不改變位置的情況下執行旋轉（即更改方向）（兩個<span>Bezier</span>點重合但方向不同）。</p>
<p>此外，在某些情況下，我們希望焊炬遵循預定的路徑，在某個特定位置暫停（例如，處理較大的焊接點），然後沿該路徑繼續前進。為了正確處理上述<span>3</span>種情況和特殊的暫停情況，重要的是能夠唯一地識別沿路徑（即路徑位置<span>*</span>）的任何位置<span>*</span>（廣義上的位置）以及路徑長度<span>*</span>（從更廣泛的意義上講是長度）。為此，用戶可以選擇幾種位置計算方法：</p>
<p><span> </span></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積線性變化。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式1.jpg" width="92"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積角度<span>**</span>變化。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式2.jpg" width="107"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（線性變化<span>+</span>角度<span>**</span>變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式3.jpg" width="139"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積最大值（線性變化，角度<span>**</span>變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式4.jpg" width="169"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（線性變化，如果不為零，否則為角度<span>**</span>）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式5.jpg" width="328"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（角度<span>**</span>變化，如果不為零，否則為線性變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式6.jpg" width="347"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的（線性變化，角度<span>**</span>變化）的累積歐幾里德距離。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式7.jpg" width="145"/></p>
<p><span> </span></p>
<p>其中Δ<span>l</span>和Δα分別是兩個連續的<span>Bezier</span>點之間的線性和角度變化。角度<span>**</span>變化是規則角度變化乘以角度係數<span>c</span>。<span> c</span>稱為角度到線性的轉換係數，並且可以將角度值和線性值組合在一起。這意味著沿路徑的位置<span>*</span>或路徑長度<span>*</span>始終以線性單位（例如米）給出，而與上面選擇的位置計算方法無關。</p>
<p>默認情況下，紅色標記的項為零。該術語可以看作是<span>Bezier</span>點（或路徑控制點）的虛擬距離或第四坐標（即每個<span>Bezier</span>點將由方向和位置（<span>x</span>，<span>y</span>，<span>z</span>，<span>w</span>）定義，其中<span>w</span>是第四坐標）。這對於沿路徑歸檔暫停點很有用。是兩個連續的<span>Bezier</span>點之間的虛擬距離變化。<span> d</span>是虛擬距離變化的比例因子（例如，如果<span>d</span>加倍，則所有暫停點的暫停持續時間將是兩倍）。為簡化起見，在以下內容中我們將不再提及該術語並將其設為零。</p>
<p>以下示例闡明了位置和長度計算概念：</p>
<p><span> <img alt="" height="256" src="/images/路徑8.jpg" width="600"/></span></p>
<p><img alt="" height="220" src="/images/路徑9.jpg" width="450"/></p>
<p></p>
<p><img alt="" height="205" src="/images/路徑10.jpg" width="600"/></p>
<p><img alt="" height="192" src="/images/路徑11.jpg" width="450"/></p>
<p>要歸檔沿路徑的特定點處的運動暫停，請執行以下操作：創建<span>3</span>個相同的路徑控制點（位置和方向完全重合），並為中間控制點指定一個虛擬距離值，該值不得為零。在下面的示例中，在<span>3</span>個重合點的虛擬距離為<span>2</span>（在第一和中間重合控制點之間為<span>1</span>，在中間和第三重合控制點之間為<span>1</span>）。如果某個對像以每秒<span>1</span>米的速度沿路徑行進，則它將在重合的控制點處記錄<span>2</span>秒的暫停：</p>
<p><span> <img alt="" height="213" src="/images/路徑12.jpg" width="285"/></span></p>
<p><span> </span></p>
<p>沿路徑運動<span>(Movement along a Path)</span></p>
<p>當前固有路徑位置在路徑上顯示為紅色球形（如果啟用了路徑位置顯示）。在模擬過程中，可以隨時使用<span>sim.setPathPosition</span>來控制球沿路徑的位置。確保了解如何計算路徑位置或路徑長度。</p>
<p>要實際使對象沿路徑移動，首先需要將對象附加到虛擬對象，然後分配虛擬對像以遵循路徑位置（帶有可選的偏移量）。</p>
<p><span> </span></p>
<p>導入和導出路徑<span>(Importing and exporting paths)</span></p>
<p>路徑導入<span>/</span>導出功能可在<span>CSV</span>文件（逗號分隔值）上運行，該<span>CSV</span>文件可以用簡單的文本編輯器創建或讀取，但也可以輕鬆地導入<span>/</span>導出到<span>Microsoft Excel</span>等應用程序中。</p>
<p>導入路徑</p>
<p><span>CoppeliaSim</span>的導入功能（<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導入<span>-&gt; CSV</span>的路徑<span>...]</span>）逐行讀取值，其中每行對應一個控制點。每行應採用以下格式設置：</p>
<p><span> </span><span>x</span>，<span>y</span>，<span>z</span>，<span>alpha</span>，<span>beta</span>，<span>gamma</span>，<span>relativeVelocity</span>，<span>BezierPointCount</span>，<span>interpolationFactor1</span>，<span>interpolationFactor2</span>，</p>
<p><span> virtualDistance</span>，<span>auxiliaryFlags</span>，<span>auxiliaryChannel1</span>，<span>auxiliaryChannel2</span>，<span>auxiliaryChannel3</span>，<span>auxiliaryChannel4</span></p>
<p>其中內容相對應的意思：<span> </span></p>
<p>（<span>x</span>，<span>y</span>，<span>z</span>）表示控制點在<span>METERS</span>中的位置</p>
<p>（α，β，γ）表示控制點的方向，以度數表示為歐拉角。默認值為（<span>0,0,0</span>）。</p>
<p>相對速度已棄用。設為<span>1.0</span></p>
<p><span>BezierPointCount</span>是控制點所需的<span>Bezier</span>點數。默認值為<span>1</span>。</p>
<p><span>InterpolationFactor1</span>和<span>InterpolationFactor2</span>是在路徑控制點和<span>Bezier</span>點部分中描述的插值因子。默認值為<span>0.5</span></p>
<p><span>VirtualDistance</span>：虛擬距離值，添加到該控制點位置的路徑長度上，另請參見路徑位置或路徑長度計算方法。默認值為<span>0.0</span></p>
<p>輔助標誌：可以用於各種目的的標誌，可以通過<span>sim.getDataOnPath</span>函數進行查詢。默認值為<span>0</span>。</p>
<p>輔助通道<span>1-4</span>：可以用於各種目的的值，可以通過<span>sim.getDataOnPath</span>函數進行查詢。默認值為<span>0.0</span></p>
<p>除了前三個值（控制點位置坐標）外，所有其他值都可以省略，在這種情況下，將應用默認值。</p>
<p><span> </span>導出路徑</p>
<p>通過選擇路徑，然後單擊<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導出<span>-&gt;</span>選定路徑為<span>CSV ...]</span>，可以導出路徑的控制點。在這種情況下，導出格式與前面描述的路徑導入格式相同。</p>
<p>也可以通過選擇路徑，然後單擊<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導出<span>-&gt;</span>所選路徑的<span>Bezier</span>曲線為<span>CSV ...]</span>來導出路徑的<span>Bezier</span>點。在這種情況下，創建的文件（導出的文件）中的每一行都對應一個<span>Bezier</span>點，並包含以下值：</p>
<p><span> </span><span>x</span>，<span>y</span>，<span>z</span>，<span>alpha</span>，<span>beta</span>，<span>gamma</span>，相對速度，虛擬距離，輔助標記，輔助通道<span>1</span>，輔助通道<span>2</span>，<span>assistantChannel3</span>，<span>auxiliaryChannel4</span><span> </span></p>
<p><span> </span></p>
<p>路徑編輯模式<span>(Path edit mode)</span></p>
<p>初步說明：路徑編輯模式是一種方便且功能齊全的編輯路徑對象的方法。但是，可以在不進入用於最小化路徑修改的路徑編輯模式的情況下移動和擦除單個路徑點（選擇單個路徑點時，請確保沒有選擇除路徑之外的其他對象）。</p>
<p>可以通過單擊相應的工具欄按鈕來訪問路徑編輯模式：</p>
<p><span><img alt="" height="37" src="/images/路徑編輯一.jpg" width="38"/><br/></span></p>
<p><span>[</span>路徑編輯模式工具欄按鈕<span>]</span><span> </span></p>
<p>上面的工具欄按鈕僅在選擇路徑後才有效。在路徑編輯模式下，窗口中通常顯示場景層次結構的部分用於將路徑控制點顯示為列表。可以使用鼠標選擇列表中的項目，就像在層次結構窗口中的對像一樣。</p>
<p><span> <img alt="" height="478" src="/images/路徑編輯二.jpg" width="600"/></span></p>
<p><span>[</span>路徑編輯模式<span>]</span></p>
<p>現在可以像常規對像一樣選擇單個控制點。最後選擇的控制點以白色顯示，其他選擇的控制點以黃色顯示，未選擇的控制點以藍色顯示。以類似的方式，可以使用鼠標直接平移控制點，方法是使用工具欄的對象<span>/</span>項目平移工具欄按鈕在與視圖方向垂直的平面中平移所選的控制點：</p>
<p><span><img alt="" height="37" src="/images/路徑編輯三.jpg" width="38"/><br/></span></p>
<p><span>[</span>對象<span>/</span>項目翻譯工具欄按鈕<span>]</span></p>
<p>在路徑編輯模式下，將顯示路徑編輯模式對話框：</p>
<p><span><img alt="" height="478" src="/images/路徑編輯四.jpg" width="396"/><br/></span></p>
<p><span>[</span>控制點屬性對話框<span>]</span></p>
<p>路徑已關閉：如果選中，則路徑的最後一個控制點將鏈接到其第一個控制點，以關閉路徑並使其循環運行。閉合路徑至少需要<span>3</span>個控制點。</p>
<p>路徑是平坦的：如果選中，則所有控制點（以及隨後的所有<span>Bezier</span>點）都將約束到路徑對象的本地參考系的<span>z = 0</span>平面。</p>
<p>自動定向：如果啟用，則將自動計算所有控制點和貝塞爾曲線點的定向，以使該點的<span>z</span>軸沿著路徑，其<span>y</span>軸指向其曲率向外（如果啟用了<span>x up</span>，則<span>y -</span>軸沒有特別限制）。如果禁用，則用戶確定控制點的方向，貝塞爾曲線點的方向將從路徑的控制點的方向內插。</p>
<p>保持<span>x</span>向上：如果選中，則自動定向功能將使每個<span>Bezier</span>點的<span>z</span>軸沿路徑對齊，並使其<span>x</span>軸沿路徑對象的<span>z</span>軸指向。</p>
<p>清除選擇：清除控制點的選擇。</p>
<p>反轉選擇：反轉控制點的選擇狀態。</p>
<p>製作虛擬對象：在選擇控制點的位置生成虛擬對象。</p>
<p>貝塞爾曲線插值因子<span>1/2</span>：有關詳細信息，請參見控制點和貝塞爾曲線部分。</p>
<p>貝塞爾曲線點數：有關詳細信息，請參見控制點和貝塞爾曲線部分。</p>
<p>虛擬距離：有關詳細信息，請參見關於沿路徑運動的部分。</p>
<p>輔助標誌：可以用於各種目的的標誌，可以通過<span>sim.getDataOnPath</span>函數進行查詢。</p>
<p>輔助通道<span>1-4</span>：可以用於各種目的的值，可以通過<span>sim.getDataOnPath</span>函數進行查詢。</p>
<p>為了精確定位控制點，請使用坐標和變換對話框。如果要編輯控制點的方向，請確保禁用路徑的“自動方向”選項（默認情況下啟用該選項）。</p>
<p>常規鍵組合（即<span>ctrl-c</span>，<span>ctrl-v</span>，<span>delete</span>和<span>ctrl-x</span>）支持複製<span>/</span>粘貼<span>/</span>刪除<span>/</span>剪切操作。確保主視圖具有焦點，以便按鍵起作用。如果未選擇任何控制點，則黏貼操作會將復制的控制點黏貼到控制點列表的開頭，否則將黏貼到選定的控制點之後（確保不超過一個控制點）。在此階段選擇）。也可以通過彈出菜單或通過<span>[</span>主菜單<span>-&gt;</span>編輯<span>]</span>訪問相同的複制<span>/</span>黏貼<span>/</span>刪除<span>/</span>剪切功能。其他操作包括：</p>
<p>在路徑的開頭插入新的路徑點<span>/</span>選擇後插入新的路徑點：如果未選擇任何控制點，則在路徑的開頭插入新的控制點；否則，在當前選擇之後插入新的控制點（請確保沒有其他內容）在這種情況下，選擇一個控制點）。</p>
<p>從貝塞爾曲線創建新路徑：使用當前路徑的貝塞爾點生成一個新的路徑對象，即新路徑的控制點將為當前路徑的貝塞爾點。</p>
<p><span> </span></p>
<p>超頻樹<span>(OC trees)</span></p>
<p><span>OC</span>樹是代表空間分區的對象。它由樹形數據結構組成，其中每個節點正好具有八個子代。佔用的葉節點表示為體素。<span> OC</span>樹可用於為形狀或點雲提供簡化的表示，或者可充當佔用網格<span>/</span>空間：</p>
<p><span><img alt="" height="393" src="/images/樹木3.jpg" width="527"/><br/></span></p>
<p><span>OC</span>樹是可碰撞，可測量和可檢測的對象。這意味著<span>OC</span>樹：</p>
<p>可用於與其他可碰撞對象的碰撞檢測。</p>
<p>可與其他可測量對像一起用於最小距離計算。</p>
<p>可以被接近傳感器檢測到。</p>
<p><span>OC</span>樹可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt; OC</span>樹<span>]</span>添加到場景中，並通過<span>OC</span>樹屬性進行編輯。</p>
<p><span>CoppeliaSim</span>中可用的<span>OC</span>樹計算（即碰撞，距離和接近傳感器計算）也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span></p>
<p><span>OC</span>樹屬性<span>(OC tree properties)</span></p>
<p><span>OC</span>樹屬性是場景對象屬性對話框的一部分，該對話框位於<span>[</span>菜單欄<span>-&gt;</span>工具<span>-&gt;</span>場景對象屬性<span>]</span>。您還可以通過雙擊場景層次結構中的對像圖標或單擊其工具欄按鈕來打開對話框：</p>
<p><span> <img alt="" height="37" src="/images/樹木1.jpg" width="38"/></span></p>
<p><span>[</span>場景對象屬性工具欄按鈕<span>]</span></p>
<p>在場景對象屬性對話框中，單擊<span>OC</span>樹按鈕以顯示<span>OC</span>樹對話框（僅當最後選擇的是<span>OC</span>樹時才會顯示<span>OC</span>樹按鈕）。該對話框顯示最後選擇的<span>OC</span>樹的設置和參數：</p>
<p><span> <img alt="" height="342" src="/images/樹木2.jpg" width="380"/></span></p>
<p><span>[OC</span>樹對話框<span>]</span></p>
<p>體素大小：<span>OC</span>樹體素的大小。大小越小，用於<span>OC</span>樹數據結構的內存就越大。</p>
<p>插入選定的可見對象：允許基於選定的可見對象插入體素。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標<span>OC</span>樹對象。</p>
<p>減去選定的可見對象：允許基於選定的可見對象刪除體素。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標<span>OC</span>樹對象。</p>
<p>清除<span>OC</span>樹：從<span>OC</span>樹中刪除所有體素。</p>
<p>體素具有隨機顏色：每個體素將具有隨機顏色。</p>
<p>顯示<span>OC</span>樹結構：顯示<span>OC</span>樹數據結構，主要用於調試目的。</p>
<p>顏色是自發光的：體素將以自發光的顏色顯示。</p>
<p>顯示點而不是體素：對於包含大量體素的<span>OC</span>樹，顯示可能會很慢。在這種情況下，您可以顯示像素體素，而不是立方體素。</p>
<p>調整下一次插入的顏色：允許選擇新的顏色，該顏色將用於新的體素插入。<span><br/> <br/> </span></p>
<p><span></span></p>
<p>點雲<span>(Point clouds)</span></p>
<p>點雲是充當基於<span>OC</span>樹的點容器的對象：</p>
<p><span> <img alt="" height="416" src="/images/雲3.jpg" width="599"/></span></p>
<p>點雲是可碰撞，可測量和可檢測的對象。這意味著點雲：</p>
<p>可用於與其他基於體積的可碰撞對象（例如<span>OC</span>樹）的碰撞檢測。</p>
<p>可與其他可測量對像一起用於最小距離計算。</p>
<p>可以被接近傳感器檢測到。</p>
<p>可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>點雲<span>]</span>將點雲添加到場景，並通過點雲屬性進行編輯。</p>
<p><span>CoppeliaSim</span>中可用的點雲計算（即碰撞，距離和接近傳感器計算）也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span></p>
<p>點雲屬性<span>(Point cloud properties)</span></p>
<p>點雲屬性是場景對象屬性對話框的一部分，該對話框位於<span>[</span>菜單欄<span>-&gt;</span>工具<span>-&gt;</span>場景對象屬性<span>]</span>。您還可以通過雙擊場景層次結構中的對像圖標或單擊其工具欄按鈕來打開對話框：</p>
<p><span> <img alt="" height="37" src="/images/雲1.jpg" width="38"/></span></p>
<p><span>[</span>場景對象屬性工具欄按鈕<span>]</span></p>
<p>在場景對象屬性對話框中，單擊“點雲”按鈕以顯示<span>OC</span>樹對話框（“點雲”按鈕僅在最後選擇的是點雲時出現）。該對話框顯示最後選擇的點雲的設置和參數：</p>
<p><span> <img alt="" height="413" src="/images/雲2.jpg" width="380"/></span></p>
<p><span>[</span>點雲對話框<span>]</span></p>
<p>不要使用<span>OC</span>樹計算。結構：默認情況下，點雲使用類似於<span>OC</span>樹的計算結構進行有效的點操作。此結構可能會減慢插入點和刪除點的速度。如果啟用此項目，則點插入將更加有效，但是點雲將不再可碰撞，不可測量或不可檢測，並且某些其他操作也可能會受到限制。您始終可以在以後的階段或通過<span>sim.setPointCloudOptions</span>切換此項目。</p>
<p>最高體素大小：將包含點的<span>OC</span>樹體素的最大大小。大小越小，此點雲所基於的<span>OC</span>樹數據結構將使用的內存就越大。</p>
<p>最高點數<span>/</span>體素：單個<span>OC</span>樹體素可以包含的最大點數。如果需要在此類體素中存儲更多點，它將被拆分為<span>8</span>個子體素，直到滿足約束條件為止。為了有效地進行碰撞檢測，距離計算和接近傳感器檢測，建議在單個體素中存儲大約<span>10-20</span>個點。</p>
<p>插入選定的可見對象：允許基於選定的可見對象插入點。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標點雲對象。形狀將事先轉換為具有指定構建分辨率的臨時<span>OC</span>樹。插入公差項允許通過指定用於確定是否插入點的最小距離公差來避免重複的點。插入公差<span>&gt; 0.0</span>時，點插入將變慢。</p>
<p>減去選定的可見對象：允許基於選定的可見對象減去點。僅考慮虛擬變量，超頻樹和點雲。選擇要減去的所有對象，然後最後選擇目標點雲對象。假人和點雲將使用減法公差值來標識要刪除的點。</p>
<p>清除點雲：從點雲中刪除所有點。</p>
<p>點具有隨機顏色：每個點將具有隨機顏色。</p>
<p>顯示<span>OC</span>樹結構：顯示底層<span>OC</span>樹數據結構，主要用於調試目的。</p>
<p>顏色是自發光的：點將以自發光的顏色顯示。</p>
<p>點顯示比例：包含大量點的點雲可能會減慢渲染速度。通過將比率設置為小於<span>1</span>，將為每個包含點的<span>OC</span>樹體素顯示更少的點數。這僅對顯示<span>/</span>渲染的圖像有影響。</p>
<p>點大小：點的大小，以像素為單位。</p>
<p>調整下一次插入的顏色：允許選擇一種新的顏色，該顏色將用於新的點插入。</p>
<p><span> </span></p>
<p>外部控制器教程<span>(External controller tutorial)</span></p>
<p>在<span>CoppeliaSim</span>中，有幾種方法可以控制機器人或仿真：</p>
<p>最方便的方法是編寫一個子腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義<span>Lua</span>函數或<span>Lua</span>擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後<span>3</span>種方法（即使用常規<span>API</span>）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。但是，編寫腳本有幾個缺點：您無法選擇編程語言，不能擁有最快的代碼，並且除了<span>Lua</span>擴展庫之外，無法直接訪問外部函數庫。</p>
<p>可以控制機器人或模擬的另一種方法是編寫插件。插件機制允許使用回調機制，自定義<span>Lua</span>函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用（例如，插件註冊自定義的<span>Lua</span>函數，當從子腳本中調用時，該<span>Lua</span>函數將回調特定的插件函數）。使用插件的主要優勢還在於，與本節中提到的後<span>3</span>種方法（即使用常規<span>API</span>）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。另請參閱插件教程。</p>
<p>控制機器人或模擬的第三種方法是編寫依賴於遠程<span>API</span>的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。這也使您可以使用與運行真實機器人完全相同的代碼來控制仿真或模型（例如虛擬機器人）。遠程<span>API</span>有兩個版本：基於<span>B0</span>的遠程<span>API</span>和舊版遠程<span>API</span>。</p>
<p>控制機器人或仿真的第五種方法是通過<span>ROS</span>節點。<span> ROS</span>與遠程<span>API</span>相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程<span>API</span>非常輕巧且快速，但它僅允許與<span>CoppeliaSim</span>通信。另一方面，<span>ROS</span>允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。但是，它比遠程<span>API</span>重並且更複雜。有關詳細信息，請參閱<span>ROS</span>接口。</p>
<p>控制機器人或模擬的第六種方法是通過<span>BlueZero</span>（<span>BØ</span>）節點。與<span>ROS</span>類似，<span>BlueZero</span>是使多個分佈式進程相互通信的一種便捷方法，並且是一種輕量級的跨平台解決方案。有關詳細信息，請參考<span>BlueZero</span>界面。</p>
<p>控制機器人或模擬的第七種方法是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與<span>CoppeliaSim</span>插件或<span>CoppeliaSim</span>腳本進行通信。選擇編程語言（可以是任何一種語言）和靈活性是兩個主要優點。同樣，控制代碼也可以在機器人或其他計算機上運行。但是，與使用遠程<span>API</span>的方法相比，這種控制仿真或模型的方法更加乏味。</p>
<p>有<span>8</span>個與本教程相關的場景文件：</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaScript</span>：一個機器人是通過非線程子腳本控制的，另一個是通過線程子腳本控制的。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaPlugin</span>：機器人是通過插件控制的。</p>
<p><span>scenes / controlTypeExamples / controlViaB0RemoteApi</span>：通過基於<span>B0</span>的遠程<span>API</span>來控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaLegacyRemoteApi</span>：通過舊版遠程<span>API</span>控制機器人。</p>
<p><span>scenes / controlTypeExamples / controlViaB0</span>：通過<span>BlueZero</span>界面控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaRos</span>：通過<span>ROS</span>接口控制機器人。</p>
<p><span>scenes / controlTypeExamples / controlViaRos2</span>：通過<span>ROS2</span>接口控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaTcp</span>：通過<span>LuaSocket</span>和<span>TCP</span>控制機器人。</p>
<p><img alt="" height="581" src="/images/輸出.jpg" width="752"/></p>
<p>在所有<span>8</span>種情況下，都使用子腳本，主要是為了與外界建立鏈接（例如，啟動正確的客戶端應用程序，並將正確的對象句柄傳遞給它）。有兩種其他方法可以控制機器人，模擬或模擬器本身：使用自定義腳本或附加組件。但是，不建議將它們用於控制，而應使用在模擬未運行時處理功能。</p>
<p>例如，鏈接到場景控制的<span>ViaB0RemoteApi.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p>使用某些對象句柄作為參數啟動控制器應用程序（<span>bubbleRobClient_b0RemoteApi</span>）。基於對象<span>B0</span>的遠程<span>API</span>的服務器功能由對象<span>b0RemoteApiServer</span>提供。</p>
<p>作為另一個示例，鏈接到場景控制的<span>ViaRos.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p>檢查是否已加載<span>CoppeliaSim</span>的<span>ROS</span>接口</p>
<p>使用某些主題名稱或對象句柄作為參數啟動控制器應用程序（<span>rosBubbleRob</span>）</p>
<p>然而，作為另一個示例，鏈接到場景控制的<span>ViaTcp.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p>搜索空閒的套接字連接端口</p>
<p>使用所選的連接端口作為參數啟動控制器應用程序（<span>bubbleRobServer</span>）</p>
<p>本地連接到控制器應用程序</p>
<p>在每次仿真過程中，將傳感器值發送到控制器，並從控制器讀取所需的電機值</p>
<p>在每次模擬過程中，將所需的電機值應用於機器人的關節</p>
<p>運行模擬，然後復制並粘貼機器人：您將看到重複的機器人將直接運行，因為附加的子腳本負責啟動各自外部應用程序的新實例，或調用適當的插件函數。</p>
<h3>心得</h3>
<p>我們透過CoppeliaSim這本電子書學習到許多東西，而且裡面有許多功能可以供我們使用，例如裡面的假人可以被用來測量與機器人的距離，可以被偵測器偵測到的，同時具有可以放在路徑上做為輔助的對象……等，在這個電子書裡讓我們訝異的是他的API 不是只有Python能用而已，可以用許多程式來寫API，讓我們覺得自己所學的還不太足夠應該多加努力。</p>
<h2>報告</h2>
<p><a href="https://s5.aconvert.com/convert/p3r68-cdx67/ren7r-cyl88.pdf">https://s5.aconvert.com/convert/p3r68-cdx67/ren7r-cyl88.pdf</a></p>
<p>影片簡單<a href="https://youtu.be/Gj974WwbWJ4"></a>說明</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Gj974WwbWJ4" width="560"></iframe></p>
<p></p>
<p></p>
<h1>webots tutorial</h1>
<p></p>
<h2>webots 入門</h2>
<h3>用戶介面</h3>
<p></p>
<p><strong></strong></p>
<p><span>Webots GUI由四個主要窗口組成：顯示並允許您與3D模擬進行交互的</span><em><span><span>3D窗口</span></span></em><span><span>，</span><span>表示當前世界的層次結構</span><span>的“<span> </span></span></span><em><span><span>場景樹”</span></span></em><span><span>，允許您編輯源代碼</span><span>的“<span> </span></span></span><em><span><span>文本”編輯器</span></span></em><span><span>，以及最後，</span><span>同時顯示編譯和控制器輸出</span><span>的</span></span><em><span><span>控制台</span></span></em><span><span>。</span></span></p>
<p><span><span><img alt="" height="268" src="/images/main_window.thumbnail.jpg" width="481"/></span></span></p>
<p><span><span><span>GUI有九個菜單</span></span></span></p>
<p><span style="background-color: #ff9900;"><code>File, Edit, View, Simulation, Build, Overlays, Tools, Wizards</code>和<code>Help</code>。</span></p>
<h6><strong><span style="background-color: #ffffff;">文件菜單</span></strong></h6>
<p><strong><span>文件</span></strong><span>菜單允許您執行常規的文件操作：加載，保存等。</span></p>
<ul>
<li>
<p><span><span>所述</span></span><strong><span><span>新世界</span></span></strong><span><span>菜單項目（和按鈕）中只含有模擬窗打開一個新的世界</span></span><a href="https://cyberbotics.com/doc/reference/elevationgrid"><span><span>ElevationGrid</span></span></a><span><span>，顯示為10×10平方1米×1米的表面上的棋盤。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/open-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>打開世界...”</span></span></strong><span><span>菜單項（和按鈕）打開一個文件選擇對話框，該對話框允許您選擇要加載的“ .wbt”文件。</span></span></p>
</li>
<li>
<p><span><span>通過“<span> </span></span></span><strong><span><span>打開最近的世界”</span></span></strong><span><span>菜單項，可以從子菜單中顯示的列表中選擇一個最近打開的“ .wbt”文件，以重新打開該文件。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>打開示例世界”</span></span></strong><span><span>菜單項將打開一個對話框，列出所有可用的示例世界，在其中可以通過在搜索字段中輸入文件名或其中的一部分來搜索要加載的特定“ .wbt”文件。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/save-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>保存世界”</span></span></strong><span><span>菜單項（和按鈕）使用當前文件名（顯示在主窗口頂部的文件名）保存當前世界。</span><span>在每個</span></span><code>Save</code><span><span>.wbt文件的內容上都將被覆蓋，Webots不會創建任何備份副本，因此，您應謹慎使用此按鈕，並最終手動進行安全副本。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>另存為...”</span></span></strong><span><span>菜單項（和按鈕）使用用戶輸入的新文件名保存當前世界。</span><span>請注意，“。wbt”文件應始終保存在Webots項目目錄以及“ worlds”子目錄中，否則將無法重新打開該文件。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/revert-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>重新加載世界”</span></span></strong><span><span>菜單項（和按鈕）從已保存的版本重新加載當前世界，並從頭開始重新進行仿真。</span></span></p>
<span><span><img alt="" height="97" src="/images/注意.JPG" width="894"/></span></span></li>
</ul>
<p><span style="background-color: #ffffff;">  <img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/reset-simulation-button.png" width="26"/><span><span> 述</span></span><strong><span><span>復位仿真</span></span></strong><span><span>菜單項目（和按鈕）恢復模擬的初始狀態。</span><span>仿真並沒有像重新加載一樣完全被破壞和重建，但是所有節點的初始狀態都得以恢復，這要快得多。</span></span></span></p>
<p><span style="background-color: #ffffff;"><span><span><img alt="" height="515" src="/images/注意1.JPG" width="724"/></span></span></span></p>
<ul>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/new-button.png" width="26"/><span>“<span> </span></span><strong><span>新建文本文件”</span></strong><span>菜單項（和按鈕）在文本編輯器中打開一個空文本文件。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/open-button.png" width="26"/><span>“<span> </span></span><strong><span>打開文本文件...”</span></strong><span>菜單項（和按鈕）打開一個文件選擇對話框，該對話框允許您選擇要加載的文本文件（例如“ .java”文件）。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/save-button.png" width="26"/><span>“<span> </span></span><strong><span>保存文本文件”</span></strong><span>菜單項（和按鈕）將保存當前文本文件。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/save_as-button.png" width="26"/><span>“<span> </span></span><strong><span>將文本文件另存為...”</span></strong><span>菜單項（和按鈕）使用用戶輸入的新文件名保存當前文本文件。</span></p>
</li>
<li>
<p><span>將</span><strong><span>保存所有文本文件</span></strong><span>菜單項保存所有打開的和未保存的文本文件。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/revert-button.png" width="26"/><span>“<span> </span></span><strong><span>還原文本文件”</span></strong><span>菜單項（和按鈕）從保存的版本中重新加載文本文件。</span></p>
</li>
<li>
<p><span>“<span> </span></span><strong><span>打印預覽...”</span></strong><span>菜單項打開一個窗口，可讓您管理頁面佈局，以便從文本編輯器中打印文件。</span></p>
</li>
<li>
<p><span>“<span> </span></span><strong><span>打印...”</span></strong><span>菜單項打開一個窗口，使您可以打印文本編輯器的當前文件。</span></p>
</li>
<li>
<p><span>在</span><strong><span>導入VRML97 ...</span></strong><span>菜單項，在現場樹的末尾添加VRML97對象。這些對象來自您必須指定的VRML97文件。此功能對於導入在3D建模程序中建模的複雜形狀，然後導出到VRML97（以前稱為VRML 2.0）非常有用。大多數3D建模軟件，例如3D Studio Max，Maya，AutoCAD，Pro Engineer，AC3D或Art Of Illusion，都包含VRML97（或VRML 2.0）導出功能。請注意，Webots無法以VRML 1.0格式導入文件。導入後，這些對象將在場景樹的底部顯示為</span><a href="https://cyberbotics.com/doc/reference/group"><span>Group</span></a><span>，</span><a href="https://cyberbotics.com/doc/reference/transform"><span>Transform</span></a><span>或</span><a href="https://cyberbotics.com/doc/reference/shape"><span>Shape</span></a><span>節點。然後，您可以將這些對象轉換為Webots節點（例如</span><a href="https://cyberbotics.com/doc/reference/solid"><span>Solid</span></a><span>，</span><a href="https://cyberbotics.com/doc/reference/robot"><span>Robot</span></a><span>等），或將它們剪切並粘貼到</span><code>children</code><span>現有Webots節點列表中。</span></p>
</li>
<li>
<p><span>該</span><strong><span>出口VRML97 ...</span></strong><span>項目讓您當前載入世界保存為“.WRL”的文件，符合VRML97標準。反過來，可以使用任何VRML97查看器和大多數3D建模軟件打開此類文件。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/screenshot-button.png" width="26"/><span>使用</span><strong><span>“截取屏幕截圖...”</span></strong><span>項可以截取Webots中當前視圖的截屏。它會打開一個文件對話框，將當前視圖另存為PNG或JPG圖像。</span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/movie-button.png" width="26"/><span>在</span><strong><span>製作電影...</span></strong><span>項允許你創建MPEG電影（Linux和MacOS）或AVI動畫（Windows）中。電影錄製開始後，將在中更改此項</span><code>Stop Movie...</code><span>。在錄製期間，可以更改運行模式並暫停模擬。但是，僅在Webots步驟期間捕獲幀，而在暫停模擬時不捕獲。除了選擇影片的分辨率和壓縮質量外，還可以通過設置動畫來以加速模式或慢動作記錄模擬。</span><code>Video acceleration</code><span>彈出對話框中的值。如果視頻加速度值小於1，則錄製的動畫將比模擬慢。最大減慢速度，即最小加速度值，是由模擬的基本時間步長定義的，因為不可能以比模擬更新率更高的幀率進行記錄。為了增加最大的減慢速度，您應該減少仿真的基本時間步長。選中視頻字幕選項將在電影的右上角顯示加速度值。</span></p>
</li>
<li><span><img alt="" height="505" src="/images/製作電影對話框.JPG" width="441"/></span></li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>導出HTML5模型...”</span></span></strong><span><span>項允許您將當前世界導出為交互式3D“ .html”文件。</span><span>您可以在</span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/web-scene"><span><span>本節中</span></span></a><span><span>獲得有關此主題的更多信息</span><span>。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/animation-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>製作HTML5動畫...”</span></span></strong><span><span>項使您可以將模擬記錄為3D動畫並將其發佈在HTML5網頁上。</span><span>開始動畫錄製後，此項目將更改為</span></span><code>Stop HTML5 Animation...</code><span><span>，可用於停止動畫錄製。</span><span>您可以在</span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/web-animation"><span><span>本節中</span></span></a><span><span>獲得有關此主題的更多信息</span><span>。</span></span></p>
</li>
<li>
<p><strong><span><span>退出將</span></span></strong><span><span>終止當前的模擬並關閉Webot。</span></span></p>
<span><img alt="" height="62" src="/images/注意4.JPG" width="791"/></span><strong></strong><strong>編輯菜單</strong></li>
<li>編輯菜單提供了常用的文本編輯功能，可操縱在“ <em>文本”編輯器中</em>打開的<em>文件</em>，例如“複製”，“粘貼”，“剪切”等。</li>
</ul>
<h6><strong>查看菜單</strong></h6>
<p><span>使用“<span> </span></span><strong><span>查看”</span></strong><span>菜單可以控制模擬窗口中的查看。</span></p>
<ul>
<li>
<p><span><span>的</span></span><strong><span><span>跟隨對象</span></span></strong><span><span>子菜單可固定的（靜態）視點和跟隨移動對象（通常是一個機器人）的視點之間切換。</span><span>如果希望視點跟隨對象，則首先需要用鼠標選擇對象，然後根據所需的以下行為檢查子菜單中的一項。</span><span>有關不同以下行為的更多信息，</span><span>請參考</span></span><a href="https://cyberbotics.com/doc/reference/viewpoint"><span><span>Viewpoint</span></span></a><span><span>文檔。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/restore_viewpoint.png" width="26"/><span><span>加載或還原文件後，</span><span>“<span> </span></span></span><strong><span><span>還原</span></span><a href="https://cyberbotics.com/doc/reference/viewpoint"><span><span>視點”</span></span></a></strong><span><span>項會將視點的位置和方向恢復為其初始設置。</span><span>當您在場景中導航時迷路並想要返回原始視點時，此功能非常方便。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/move_viewpoint_to_object_button.png" width="26"/><span> </span><strong><span><span>將視點移至對象</span></span></strong><span><span>會將視點移至中心並在選定節點上縮放。</span><span>如果所選項目是字段，則將定位上級父節點。</span><span>該對象將位於3D視圖的中心，並且將完全可見。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/front_view.png" width="26"/><span><span>在</span></span><strong><span><span>更改視圖</span></span></strong><span><span>子菜單移動視點對準它在任何所選擇的對象周圍的世界六大對齊軸。</span><span>如果未選擇任何對象，則視點將以世界原點為中心。</span><span>可用的選項為</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/front_view.png" width="26"/><span> </span><strong><span><span>前視圖</span></span></strong><span><span>，</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/back_view.png" width="26"/><span> </span><strong><span><span>後視圖</span></span></strong><span><span>，</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/left_view.png" width="26"/><span> </span><strong><span><span>左視圖</span></span></strong><span><span>，</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/right_view.png" width="26"/><span> </span><strong><span><span>右視圖</span></span></strong><span><span>，</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/top_view.png" width="26"/><span> </span><strong><span><span>頂視圖</span></span></strong><span><span>和</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/bottom_view.png" width="26"/><span> </span><strong><span><span>底視圖</span></span></strong><span><span>。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>全屏”</span></span></strong><span><span>項啟用和禁用在整個屏幕上顯示3D窗口。</span></span></p>
</li>
<li>
<p><span><span>該</span></span><strong><span><span>虛擬現實耳機</span></span></strong><span><span>子菜單允許你使用虛擬現實的耳機，如HTC萬歲或Oculus Rift以查看模擬：</span></span></p>
<ul>
<li><span><span>將</span></span><strong><span><span>啟用</span></span></strong><span><span>選項允許你切換模擬視圖耳機。</span></span></li>
<li><span><span>“<span> </span></span></span><strong><span><span>跟踪頭戴式耳機位置”</span></span></strong><span><span>和“<span> </span></span></span><strong><span><span>跟踪頭戴式耳機方向”</span></span></strong><span><span>項目指定是否應跟踪頭戴式耳機的位置和方向並將其應用於視點。</span></span></li>
<li><span><span>“<span> </span></span></span><strong><span><span>查看左眼”</span></span></strong><span><span>，“<span> </span></span></span><strong><span><span>查看右眼”</span></span></strong><span><span>和“<span> </span></span></span><strong><span><span>空視圖”</span></span></strong><span><span>單選按鈕使您可以選擇在模擬視圖中應顯示的內容。</span><span>您可以看到左眼圖像，右眼圖像或什麼都看不到。</span></span></li>
<li><span><span>使用“<span> </span></span></span><strong><span><span>抗鋸齒”</span></span></strong><span><span>項可以在兩隻眼睛的圖像上啟用抗鋸齒（請注意，抗鋸齒會降低仿真速度）。</span></span></li>
<li><span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/computer-peripherals"><span><span>此處</span></span></a><span><span>介紹耳機的安裝過程</span><span>。</span></span><span><span></span></span><span><span></span></span></li>
<li><span><span><img alt="" height="76" src="/images/注意5.JPG" width="746"/></span></span><span><span></span></span></li>
<li>
<p><span><span>通過“<span> </span></span></span><strong><span><span>投影”</span></span></strong><span><span>單選按鈕組，可以在“<span> </span></span></span><strong><span><span>透視投影”</span></span></strong><span><span>（默認）和“<span> </span></span><span>Webots模擬”窗口的“<span> </span></span></span><strong><span><span>正投影”</span></span></strong><span><span>模式</span><span>之間進行選擇</span><span>。</span><span>該</span></span><em><span><span>透視</span></span></em><span><span>模式對應於天然投影：其中所述更遠的對象是從觀察者，較小它出現在圖像中。</span><span>使用</span></span><em><span><span>正交</span></span></em><span><span>投影時，與查看者的距離不會影響物體的大小。</span><span>此外，在</span></span><em><span><span>正交</span></span></em><span><span>模式下，模型中平行的線在屏幕上平行繪製，因此，此投影有時在建模階段很有用。</span><span>在</span></span><em><span><span>正交</span></span></em><span><span>模式下</span><span>不會渲染陰影</span><span>。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>渲染”</span></span></strong><span><span>單選按鈕組使您可以在“<span> </span></span></span><strong><span><span>普通渲染”</span></span></strong><span><span>（默認）和“<span> </span></span><span>Webots模擬”<span> </span></span><span>的“<span> </span></span></span><strong><span><span>線框”</span></span></strong><span><span>模式</span><span>之間進行選擇</span><span>。</span><span>在</span></span><em><span><span>普通渲染</span></span></em><span><span>模式下，對像以其幾何面，材質，顏色和紋理進行渲染，其方式與通常用眼睛或照相機看到的方式相同。</span><span>在</span></span><em><span><span>線框渲染</span></span></em><span><span>模式下，只有可呈現圖元的段被渲染。</span><span>此模式對於調試網格很有用。</span><span>如果</span></span><em><span><span>線框渲染</span></span></em><span><span>模式和</span></span><code>View / Optional Rendering / Show All Bounding Objects</code><span><span>切換按鈕均被激活，則僅繪製邊界對象（不渲染可渲染圖元）。</span><span>這可用於調試衝突檢測問題。</span></span></p>
</li>
<li>
<p><span><span>在</span></span><strong><span><span>可選的渲染</span></span></strong><span><span>子菜單，可以顯示或隱藏，補充信息。</span><span>這些渲染僅顯示在主渲染中，並隱藏在機器人攝像機中。</span><span>它們用於更好地了解模擬的行為：</span></span></p>
<ul>
<li>
<p><span><span>使用“<span> </span></span></span><strong><span><span>顯示坐標系”，</span></span></strong><span><span>可以將3D窗口右下角的全局坐標系顯示或隱藏為分別代表x，y和z軸的紅色，綠色和藍色箭頭。</span></span></p>
</li>
<li>
<p><span><span>使用“<span> </span></span></span><strong><span><span>顯示所有邊界對象”，</span></span></strong><span><span>可以顯示或隱藏所有邊界對象（在</span><span>每個</span><em><span>Solid</span></em><span>節點</span><span>的</span></span><em><span><span>boundingObject</span></span></em><span><span>字段中</span><span>定義</span><span>）。</span><span>邊界對象由白線表示。</span><span>當發生碰撞時，這些線變為玫瑰，而當實體處於空閒狀態（即，它靜止不與任何其他活動的實體相互作用）時，這些線變為藍色。</span></span><em><span></span></em><span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示接觸點”</span></span></strong><span><span>使您可以顯示或隱藏由碰撞檢測引擎生成的接觸點。</span><span>沒有示出沒有產生相應的接觸力的接觸點。</span><span>接觸力僅對使用物理模擬的對像生成（</span><span>需要</span></span><a href="https://cyberbotics.com/doc/reference/physics"><span><span>物理</span></span></a><span><span>節點）。</span><span>需要考慮此操作的步驟。</span></span></p>
</li>
<li>
<p><span><span>使用</span></span><strong><span><span>顯示連接器軸</span></span></strong><span><span>可以顯示或隱藏連接器軸。</span><span>旋轉對齊方式顯示為黑色，而y和z軸分別顯示為綠色和藍色。</span></span></p>
</li>
<li>
<p><span><span>使用“<span> </span></span></span><strong><span><span>顯示關節軸”</span></span></strong><span><span>可以顯示或隱藏關節軸。</span><span>關節軸用黑線表示。</span></span></p>
</li>
<li>
<p><span><span>所述</span></span><strong><span><span>顯示測距儀平截頭體</span></span></strong><span><span>，可以顯示或隱藏，OpenGL的平截頭體剔除和場景中的每個測距儀所記錄的圖像，使用黃色線框。</span><span>如果測距儀設備被禁用或第一張圖像尚不可用，則視錐將以灰色繪製。</span><span>OpenGL剔除視錐是與測距儀視場相對應的截頂金字塔。</span><span>記錄的圖像顯示在視錐台所描述的平面上，其距離對應於距設備中心的測距儀的最小範圍。</span><span>有關此概念的更多信息，請參見OpenGL文檔。</span></span></p>
</li>
<li>
<p><span><span>使用“<span> </span></span></span><strong><span><span>顯示激光雷達路徑”</span></span></strong><span><span>，您可以使用青色線框顯示或隱藏場景中每個激光雷達的圖層（激光射線路徑）。</span><span>如果禁用了激光雷達設備或尚無法進行第一次測量，則將這些層繪製為灰色。</span></span></p>
</li>
<li>
<p><span><span>該</span></span><strong><span><span>展會激光雷達點雲</span></span></strong><span><span>，可以顯示或隱藏，對於每一個激光雷達點雲點雲模式下啟用的場景。</span><span>點雲由這些點本身的位置以及從激光雷達原點到這些點的光線（從藍色（頂層）到紅色（底層）的漸變）表示。</span><span>這種可選的渲染在計算上很昂貴，因此會大大降低仿真速度。</span><span>請注意，如果點雲包含超過2500個點，則不會顯示從激光雷達原點到該點的射線。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示攝像機視錐”</span></span></strong><span><span>允許您使用洋紅色線框顯示或隱藏場景中每個攝像機的OpenGL消隱視錐和記錄的圖像。</span><span>如果禁用了相機設備或第一張圖像尚不可用，則視錐將以灰色繪製。</span><span>OpenGL剔除視錐是與攝像機視場相對應的截頂金字塔。</span><span>由於遠端平面設置為無窮大，因此未顯示金字塔的背面。</span><span>記錄的圖像顯示在相機的近平面上。</span><span>有關此概念的更多信息，請參見OpenGL文檔。</span></span></p>
</li>
<li>
<p><span><span>所述</span></span><strong><span><span>顯示DistanceSensor射線</span></span></strong><span><span>，可以顯示或隱藏，光線由距離傳感器設備鑄造。</span><span>這些光線繪製為紅線（在碰撞點之外變為綠色）。</span><span>它們的長度對應於設備的最大範圍。</span><span>如果距離傳感器設備被禁用或尚無法進行第一次測量，則光線將以灰色繪製。</span></span></p>
</li>
<li>
<p><span><span>所述</span></span><strong><span><span>顯示LightSensor射線</span></span></strong><span><span>，可以顯示或隱藏，光線鑄造由光傳感器裝置。</span><span>這些射線繪製為黃線。</span><span>如果禁用了光傳感器設備或尚無法進行第一次測量，則光線將以灰色繪製。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示光位置”</span></span></strong><span><span>允許您顯示或隱藏</span></span><a href="https://cyberbotics.com/doc/reference/pointlight"><span><span>PointLight</span></span></a><span><span>和</span></span><a href="https://cyberbotics.com/doc/reference/spotlight"><span><span>SpotLight</span></span></a><span><span>燈</span><span>的位置</span><span>。<span> </span></span><span>沒有顯示</span></span><a href="https://cyberbotics.com/doc/reference/directionallight"><span><span>DirectionalLight</span></span></a><span><span>節點。<span> </span></span></span><a href="https://cyberbotics.com/doc/reference/pointlight"><span><span>PointLight</span></span></a><span><span>和</span></span><a href="https://cyberbotics.com/doc/reference/spotlight"><span><span>SpotLight</span></span></a><span><span>節點由被耀斑圍繞的彩色圓圈表示。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示筆繪畫射線”</span></span></strong><span><span>使您可以顯示或隱藏筆設備繪畫的射線。</span><span>如果啟用繪畫，這些光線將繪製為紫線，否則繪製為灰線。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示雷達視錐”</span></span></strong><span><span>允許您顯示或隱藏雷達視錐。</span><span>如果啟用了雷達設備，則視錐表將顯示為藍色，否則，如果禁用了雷達或尚無法進行首次測量，則視錐表將顯示為灰色。</span><span>雷達視錐表代表雷達可以在其中檢測目標的體積。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示重心”</span></span></strong><span><span>使您可以顯示或隱藏具有非NULL<span> </span></span></span><a href="https://cyberbotics.com/doc/reference/physics"><span><span>物理</span></span></a><span><span>節點</span><span>的選定實體的全局重心</span><span>。</span><span>重心呈深藍色。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>顯示浮力中心”</span></span></strong><span><span>使您可以顯示或隱藏具有非NULL<span> </span></span></span><a href="https://cyberbotics.com/doc/reference/physics"><span><span>物理</span></span></a><span><span>節點</span><span>的選定實體的整體浮力中心</span><span>。</span><span>浮力中心以紫色渲染。</span></span></p>
</li>
<li>
<p><span><span>使用</span></span><strong><span><span>顯示支撐多邊形，</span></span></strong><span><span>可以顯示或隱藏具有非NULL<span> </span></span></span><a href="https://cyberbotics.com/doc/reference/physics"><span><span>物理</span></span></a><span><span>節點</span><span>的選定實體的支撐多邊形</span><span>。</span><span>所謂支撐多邊形，是指實體的接觸點的凸包在水平平面上的投影，該平麵包含最低的多邊形。</span><span>此外，如果質心在後面的平面中的投影位於支撐多邊形內（靜態平衡），則呈綠色，否則呈紅色。</span><span>此渲染選項僅可用於頂部沒有其他實體的實體。</span></span></p>
</li>
</ul>
</li>
<li>
<p><span><span>如果</span><span>啟用</span><span>了“<span> </span></span></span><strong><span><span>禁用選擇”</span></span></strong><span><span>選項，則它會阻止您在單擊3D窗口時更改所選的實體節點。</span><span>當您要更改視點而不修改場景樹中的可見字段和選定字段時，這在建模階段特別有用。</span></span></p>
</li>
<li>
<p><span><span>如果</span><span>啟用</span><span>了“<span> </span></span></span><strong><span><span>鎖定視點”</span></span></strong><span><span>選項，則可以阻止您</span><span>在3D窗口上拖動鼠標或移動鼠標滾輪時</span><span>更改“<span> </span></span></span><a href="https://cyberbotics.com/doc/reference/viewpoint"><span><span>視點”</span></span></a><span><span>節點</span><span>的位置和方向</span><span>。</span><span>當您不想意外更改視點的位置和方向時，此功能特別有用。</span></span></p>
</li>
<li><span><span><img alt="" height="79" src="/images/注意6.JPG" width="789"/></span></span><span><span></span></span>
<h6><strong>模擬菜單</strong></h6>
</li>
<li>
<p><span>該</span><strong><span>模擬</span></strong><span>菜單用於控制模擬模式。</span></p>
<ul>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/pause-button.png" width="26"/><span><span>在</span></span><strong><span><span>暫停</span></span></strong><span><span>菜單項（和按鈕）暫停仿真。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/step-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>步驟”</span></span></strong><span><span>菜單項（和按鈕）執行模擬的一個基本時間步。</span><span>該步驟的持續時間</span><span>在</span><a href="https://cyberbotics.com/doc/reference/worldinfo"><span>WorldInfo</span></a><span>節點</span><span>的</span></span><strong><span><span>basicTimeStep</span></span></strong><span><span>字段中</span><span>定義</span><span>，可以在場景樹窗口中進行調整以滿足您的需求。</span></span><a href="https://cyberbotics.com/doc/reference/worldinfo"><span></span></a><span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/realtime-button.png" width="26"/><span><span>該</span></span><strong><span><span>實時</span></span></strong><span><span>菜單項（和按鈕），直到它被中斷運行在實時仿真</span></span><code>Pause</code><span><span>或</span></span><code>Step</code><span><span>。</span><span>在運行模式下，場景的3D顯示每</span></span><em><span><span>n個</span></span></em><span><span>基本時間步</span><span>刷新一次</span><span>，其中</span></span><em><span><span>n</span></span></em><span></span><code>displayRefresh</code><span><span>在</span></span><a href="https://cyberbotics.com/doc/reference/worldinfo"><span><span>WorldInfo</span></span></a><span><span>節點</span><span>的</span><span>字段中</span><span>定義</span><span>。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/run-button.png" width="26"/><span><span>“<span> </span></span></span><strong><span><span>運行”</span></span></strong><span><span>菜單項（和按鈕）類似於</span></span><code>Real-time</code><span><span>，除了它運行得盡可能快。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/fast-button.png" width="26"/><span><span>的</span></span><strong><span><span>快速</span></span></strong><span><span>菜單項目（和按鈕）是一樣</span></span><code>Run</code><span><span>，不同的是沒有圖形渲染被執行。</span><span>由於禁用了圖形渲染（黑屏），因此可以加快仿真速度，因此非常適合CPU密集型仿真（遺傳算法，視覺，學習等）。</span></span></p>
<strong>構建菜單</strong></li>
<li>在生成菜單提供的功能，以編譯（或交叉編譯）控制器的代碼。<a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/webots-built-in-editor">此處</a>將更詳細地描述構建菜單。 
<h6><strong>疊加菜單</strong></h6>
</li>
<li>
<p><strong><span>覆蓋”</span></strong><span>菜單提供特定於渲染設備覆蓋的操作（“<span> </span></span><a href="https://cyberbotics.com/doc/reference/camera"><span>相機”</span></a><span>，“<span> </span></span><a href="https://cyberbotics.com/doc/reference/display"><span>顯示”</span></a><span>，“”<span> </span></span><code>Rangefinder</code><span>）。僅當在3D窗口中選擇了機械手或模擬中只有一個機械手時，此菜單的某些操作才有效：</span></p>
<ul>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>攝像機設備”</span></span></strong><span><span>子菜單包含所選機器人及其後代機器人的所有攝像機設備的列表，並允許用戶通過選中或取消選中相應項目來顯示或隱藏單個攝像機覆蓋圖像。</span><span>相機覆蓋層與顯示覆蓋層不同，因為它們具有洋紅色邊框。</span><span>請注意，如果</span></span><code>Hide All Camera Overlays</code><span><span>選中</span><span>該</span><span>項目，則與</span></span><code>Camera Devices</code><span><span>菜單項</span><span>的狀態無關，攝像頭設備的疊加層在3D視圖中將不可見</span><span>。</span><span>一</span></span><code>Camera Devices</code><span><span>，如果在外部窗口通過雙擊它顯示的疊加層的紋理菜單項將被禁用。</span></span></p>
</li>
<li>
<p><span><span>所述</span></span><strong><span><span>測距儀設備</span></span></strong><span><span>子菜單包含所有選定的機器人的測距儀設備和其後代機器人的列表，並讓用戶顯示或隱藏由選中或取消選中相應的項的單測距儀的疊加圖像。</span><span>測距儀疊加層與照相機疊加層不同，因為它們具有黃色邊框。</span><span>請注意，如果</span></span><code>Hide All RangeFinder Overlays</code><span><span>選中</span><span>該</span><span>項目，則與</span></span><code>RangeFinder Devices</code><span><span>菜單項</span><span>的狀態無關，在3D視圖中將不會顯示測距儀設備覆蓋圖</span><span>。</span><span>一</span></span><code>RangeFinder Devices</code><span><span>，如果在外部窗口通過雙擊它顯示的疊加層的紋理菜單項將被禁用。</span></span></p>
</li>
<li>
<p><span><span>所述</span></span><strong><span><span>顯示設備</span></span></strong><span><span>的子菜單包含所選機器人的所有的顯示設備和其後代機器人的列表，並讓通過檢查或取消選中相應的項目的用戶顯示或隱藏單個顯示疊加圖像。</span><span>顯示覆蓋圖與相機覆蓋圖不同，因為其青色邊框。</span><span>請注意，如果</span></span><code>Hide All Display Overlays</code><span><span>選中</span><span>該</span><span>項目，則顯示設備覆蓋圖在3D視圖中將不可見，而與</span></span><code>Display Devices</code><span><span>菜單項</span><span>的狀態無關</span><span>。</span><span>一</span></span><code>Display Devices</code><span><span>，如果在外部窗口通過雙擊它顯示的疊加層的紋理菜單項將被禁用。</span></span></p>
</li>
</ul>
<p><span><span>另一方面，以下各項始終處於活動狀態，並適用於世界上所有的機器人：</span></span></p>
<ul>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>隱藏所有攝像機覆蓋物”</span></span></strong><span><span>選項可獨立於</span></span><code>Camera Devices</code><span><span>子菜單中</span><span>設置的特定機器人設備選項，在3D視圖中隱藏所有攝像機設備覆蓋物</span><span>。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>隱藏所有RangeFinder疊加層”</span></span></strong><span><span>選項獨立於</span></span><code>RangeFinder Devices</code><span><span>子菜單中</span><span>設置的特定機器人的設備選項，在3D視圖中隱藏所有相機設備的疊加層</span><span>。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>隱藏所有顯示覆蓋圖”</span></span></strong><span><span>選項可獨立於</span></span><code>Display Devices</code><span><span>子菜單中</span><span>設置的特定機器人的設備選項，隱藏3D視圖中的所有顯示設備覆蓋圖</span><span>。</span></span></p>
<strong>工具菜單</strong></li>
<li>
<p><span>在</span><strong><span>工具</span></strong><span>菜單可以打開各種Webots窗口。</span></p>
<ul>
<li>
<p><span><span>在</span></span><strong><span><span>3D視圖</span></span></strong><span><span>菜單項顯示或隱藏3D窗口，並允許您與3D模擬互動。</span></span></p>
</li>
<li>
<p><span><span>該</span></span><strong><span><span>場景樹</span></span></strong><span><span>菜單項打開</span></span><code>Scene Tree</code><span><span>，可以在其中編輯虛擬世界的窗口。</span><span>或者，也可以雙擊主窗口中的某些對象：這將自動打開“場景樹”，並選擇相應的對象。</span></span></p>
</li>
<li>
<p><span><span>在</span></span><strong><span><span>文本編輯器</span></span></strong><span><span>菜單項打開Webots文本編輯器。</span><span>該編輯器可用於編輯和編譯控制器源代碼。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>控制台”</span></span></strong><span><span>菜單項將打開“ Webots控制台”，這是一個只讀控制台，用於顯示Webots錯誤消息和控制器輸出。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>文檔”</span></span></strong><span><span>菜單項顯示或隱藏脫機“ Webots”文檔窗口。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>還原佈局”</span></span></strong><span><span>菜單項可還原主窗口面板的出廠佈局。</span></span></p>
</li>
<li>
<p><span><span>該</span></span><strong><span><span>清除控制台</span></span></strong><span><span>菜單項清除控制台。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>編輯物理插件”</span></span></strong><span><span>菜單項將在文本編輯器中打開</span><strong><span>物理插件</span></strong><span>的源代碼。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>首選項”</span></span></strong><span><span>項將彈出</span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/preferences"><span><span>本節中</span></span></a><span><span>描述的窗口</span><span>。</span></span></p>
<strong>嚮導菜單</strong></li>
<li>
<p><span>該</span><strong><span>嚮導</span></strong><span>菜單可以更容易地創建新的項目和新的控制器。</span></p>
<ul>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>新建項目目錄...”</span></span></strong><span><span>菜單項首先提示您選擇文件系統位置，然後創建一個項目目錄。</span><span>項目目錄包含幾個子目錄，這些子目錄用於存儲與特定Webots項目相關的文件，即世界文件，控制器文件，數據文件，插件等。Webots會記住當前項目目錄，並自動從中打開並保存任何類型的文件。當前項目目錄的相應子目錄。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>New Robot Controller ...”</span></span></strong><span><span>菜單項允許您創建新的控制器程序。</span><span>首先將提示您在C，C ++，Java，Python或</span></span><em><span><span>MATLAB<span> </span></span></span></em><sup><span><span>TM</span></span></sup><span><span>控制器</span><span>之間進行選擇</span><span>。</span><span>如果您在Windows上選擇C或C ++，Webots將為您提供創建Makefile / gcc項目或Visual Studio項目的可能性。</span><span>然後，Webots將要求您輸入控制器的名稱，最後它將在當前項目目錄中創建所有必需的文件（包括模板源代碼文件）。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>新建物理插件...”</span></span></strong><span><span>菜單項將使您可以為項目創建新的物理插件。</span><span>Webots要求您選擇一種編程語言（C或C ++）和新的物理插件的名稱。</span><span>然後，它將在當前項目中創建目錄，模板源代碼文件和Makefile。</span></span></p>
<strong>幫助菜單</strong></li>
<li>
<p><span>使用“<span> </span></span><strong><span>幫助”</span></strong><span>菜單可以更輕鬆地訪問文檔，支持和常規信息。</span></p>
<ul>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>關於...”</span></span></strong><span><span>項將打開一個</span></span><code>About...</code><span><span>顯示許可證信息</span><span>的</span><span>窗口。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>Webots導覽...”</span></span></strong><span><span>菜單項啟動了一個導覽，通過一系列示例演示Webots的功能。</span></span></p>
</li>
<li>
<p><span><span>“<span> </span></span></span><strong><span><span>檢查更新...”</span></span></strong><span><span>項會彈出一個窗口，通知正在使用的Webots版本是否為最新版本，並在需要時提供下載最新版本的鏈接。</span></span></p>
</li>
<li>
<p><span><span>在</span></span><strong><span><span>OpenGL的信息...</span></span></strong><span><span>菜單項，為您提供有關當前OpenGL硬件和驅動程序的信息。</span><span>它可以用於診斷渲染問題。</span></span></p>
</li>
</ul>
<p><span><span>其餘菜單項以HTML頁面，PDF文檔等形式顯示各種信息。</span></span></p>
<strong>主工具欄</strong></li>
<li>
<p><span>主工具欄包含用於添加新節點對世界的按鈕，速度表（見本</span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/the-user-interface#speedometer-and-virtual-time"><span>節</span></a><span>）和快捷方式的項目</span><code>File</code><span>，</span><code>Simulation</code><span>和</span><code>View</code><span>菜單。</span></p>
<ul>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/show_scene_tree-button.png" width="26"/><span> </span><strong><span><span>隱藏/顯示場景樹</span></span></strong><span><span>：顯示或隱藏場景樹，並因此調整3D窗口的大小。</span></span></p>
</li>
<li>
<p><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/add-button.png" width="26"/><span> </span><strong><span><span>添加</span></span></strong><span><span>：添加節點或對象。</span><span>對於節點，這會觸發一個對話框，使您可以從列表中選擇節點類型。</span><span>將使用默認值創建新節點，之後可以對其進行修改。</span><span>您只能插入適合相應字段的節點。</span><span>該對話框還可以通過單擊</span></span><strong><span><span>導入...</span></span></strong><span><span>按鈕</span><span>來加載先前導出的節點</span><span>。</span><span>有關如何導出節點的更多信息，請參見</span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-scene-tree#field-editor"><span><span>此處</span></span></a><span><span>。</span></span></p>
<strong>車速表和虛擬時間</strong></li>
<li>速度計（請參見下<a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/the-user-interface#speedometer">圖</a>）指示計算機上模擬的速度。它顯示在主工具欄上，並指示仿真與實時相比運行的速度。換句話說，它代表虛擬時間的速度。如果速度計的值為2，則意味著您的計算機仿真的運行速度是相應真實機器人的兩倍。此信息在<code>Run</code>模式和<code>Fast</code>模式下均有效。注意：在逐步模式下運行模擬時，不會顯示模擬速度（<code>N/A</code>而是顯示)</li>
<li><img alt="" height="107" src="/images/車速表.JPG" width="300"/></li>
<li><span>在速度表的左側，使用以下格式顯示</span><em><span><span>虛擬時間</span></span></em><span><span>：</span></span><span><span></span></span></li>
<li><span><span><img alt="" height="63" src="/images/速度表虛擬時間.JPG" width="650"/></span></span></li>
<li>
<p><span>其中</span><em><span>H</span></em><span>是小時數（可以是幾位數字），</span><em><span>MM</span></em><span>是分鐘數，</span><em><span>SS</span></em><span>是秒數，</span><em><span>MMM</span></em><span>是毫秒數（請參見此</span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/the-user-interface#speedometer"><span>圖</span></a><span>）。如果車速表的值大於1，則虛擬時間的進度要快於實時時間。</span></p>
<p><span><span>可以</span><span>在場景樹窗口</span></span><code>basicTimeStep</code><span><span>的</span></span><a href="https://cyberbotics.com/doc/reference/worldinfo"><span><span>WorldInfo</span></span></a><span><span>節點</span><span>的</span><span>字段中</span><span>設置模擬的基本時間步長</span><span>。</span><span>它以虛擬時間毫秒錶示。</span><span>該時間步長的值定義了在</span></span><code>Step</code><span><span>模式</span><span>期間執行的時間步長</span><span>。</span><span>此步驟乘以</span></span><code>displayRefresh</code><span><span>同一</span></span><a href="https://cyberbotics.com/doc/reference/worldinfo"><span><span>WorldInfo</span></span></a><span><span>節點</span><span>的</span><span>字段，</span><span>以定義刷新顯示的頻率。</span></span></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>感測器</h2>
<h3>相機傳感器</h3>
<p>對於大多數應用程序而言，添加通用的Camera節點就足夠了。 通用相機是可自定義的（分辨率，視野，噪點等），默認情況下包括變焦和聚焦機制。 提供特殊效果，例如運動模糊，各種噪聲模型，鏡頭畸變和使用球形投影。除了添加通用的Camera節點外，Webot中還提供了一些預定義的Camera模型。</p>
<p><strong>智能相機</strong></p>
<p>如果將“識別”節點添加到相機，則相機不僅可以返回圖像，而且還可以返回相機圖像中檢測到的所有對象及其大小和位置。 因此，模擬像是Mobileye之類的智能相機非常容易。</p>
<p><img alt="smart_camera.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/smart_camera.png"/></p>
<p><strong>MultiSense S21</strong></p>
<p>MultiSense S21是基於立體相機的距離傳感器。我們的傳感器模型包括多個Webots設備。內部的IntertialUnit設備用於獲取設備的側傾角，俯仰角和偏航角。 可以使用Webots相機獨立檢索立體相機的左右RGB圖像。 或者，可以在MultiSense S21設備的中央啟用RGB相機和RangeFinder設備。 存在這兩個“元”設備以模仿由真實設備生成的3D彩色點的雲。</p>
<p>可以使用下表從MultiSenseS21.name字段計算用於從控制器檢索設備的內部設備名稱：</p>
<p><img alt="" height="529" src="https://s40723123.github.io/cd2020/images/1586269302004.jpg" width="398"/></p>
<p><img alt="multisense_s21.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/multisense_s21.thumbnail.png"/></p>
<p><img alt="" height="365" src="https://s40723123.github.io/cd2020/images/1586269413764.jpg" width="477"/></p>
<p>名稱字段定義MultiSenseS21名稱，並用於計算內部設備名稱（請參閱此表）。</p>
<p>cameraWidth和cameraHeight字段指定所有內部渲染設備（即Cameras和RangeFinder）的分辨率。</p>
<p>cameraFieldOfView字段指定所有內部渲染設備的水平視場。</p>
<p>cameraNoise字段指定所有內部渲染設備的噪聲（請參閱Camera.noise）。</p>
<p>rangeFinderNoise字段指定內部元RangeFinder的噪聲（請參閱RangeFinder.noise）。</p>
<p>rangeFinderMaxRange字段指定內部元RangeFinder的最大範圍（請參閱RangeFinder.maxRange）。</p>
<p>leftCamera，rightCamera，metaCamera和metaRangeFinder字段允許啟用相應的內部渲染設備。</p>
<p>enablePhysics字段指定傳感器是否應該受到物理影響（質量= 1.5 [kg]）。</p>
<h3>距離傳感器</h3>
<p>對於大多數應用程序而言，添加通用的DistanceSensor節點就足夠了，因為它們是可自定義的（分辨率，lookupTable，光圈等）。此外，Webot中提供了一些預定義的商業化模型，例如某些紅外傳感器。</p>
<p><strong>Sharp GP2D120</strong></p>
<p><img alt="sharp_GP2D120.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/sharp_GP2D120.png"/></p>
<p>Sharp GP2D120是一款具有集成信號處理和模擬電壓輸出的測距傳感器。 該設備輸出與檢測距離相對應的電壓。該型號具有以下規格：</p>
<p>有效範圍：<span>4 to 30 [cm]</span></p>
<p>輸出類型：類比</p>
<p>響應時間：39 [ms]</p>
<p>啟動延遲：44 [ms]</p>
<p>平均消耗：33 [mA]</p>
<p>原型SharpGP2D120 {<br/>   SFVec3f轉換0 0 0<br/>   旋轉旋轉0 1 0 0<br/>   SFString名稱“夏普的紅外傳感器GP2D120”<br/>   SFString模型“ GP2D120”</p>
<p>根據數據表中的特徵，DistanceSensor的lookupTable字段已經實現。</p>
<p>wb_distance_sensor_get_value函數返回測量的電壓/強度。 要轉換這些值，請使用以下公式：</p>
<ul>
<li>Convert meters to voltage:<span> </span><code>y(x) = 0.5131*x^(-0.5735)-0.6143</code></li>
<li>Convert voltage to meters:<span> </span><code>y(x) = 0.1594*x^(-0.8533)-0.02916</code></li>
</ul>
<p><strong>Sharp GP2Y0A02YK0F</strong></p>
<p><strong><img alt="sharp_GP2Y0A02YK0F.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/sharp_GP2Y0A02YK0F.png"/></strong></p>
<p>Sharp GP2Y0A02YK0F是一種測距傳感器單元，由PSD（位置敏感檢測器），IR-LED（紅外發光二極管）和信號處理電路的集成組合組成。 由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。 該設備輸出與檢測距離相對應的電壓。 因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<p>有效範圍：20至150 [cm]</p>
<p>輸出類型：類比</p>
<p>響應時間：33 [ms]</p>
<p>啟動延遲：50 [ms]</p>
<p>平均消耗：33 [mA]</p>
<p>原型SharpGP2Y0A02YK0F {<br/>   SFVec3f轉換0 0 0<br/>   旋轉旋轉0 1 0 0<br/>   SFString名稱“夏普的紅外傳感器GP2Y0A02YK0F”</p>
<p>根據數據表中的特徵，DistanceSensor的lookupTable字段已經實現。wb_distance_sensor_get_value函數返回測量的電壓/強度。 要轉換這些值，請使用以下公式：</p>
<ul>
<li>Convert meters to voltage:<span> </span><code>y(x) = 1.784*x^(-0.4215)-1.11</code></li>
<li>Convert voltage to meters:<span> </span><code>y(x) = 0.7611*x^(-0.9313)-0.1252</code></li>
</ul>
<p><strong>Sharp GP2Y0A41SK0F</strong></p>
<p><strong><img alt="sharp_GP2Y0A41SK0F.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/sharp_GP2Y0A41SK0F.png"/></strong></p>
<p>Sharp GP2Y0A41SK0F是一種測距傳感器單元，由PSD（位置敏感檢測器），IR-LED（紅外發光二極管）和信號處理電路的集成組合組成。 由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。 該設備輸出與檢測距離相對應的電壓。 因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<p>有效範圍：4到30 [cm]<br/>輸出類型：類比<br/>響應時間：16.5 [ms]<br/>啟動延遲：26 [ms]<br/>平均消耗：12 [mA]</p>
<p><span>原型SharpGP2Y0A41SK0F {<br/>   SFVec3f轉換0 0 0<br/>   旋轉旋轉0 1 0 0<br/>   SFString名稱“夏普的紅外傳感器GP2Y0A41SK0F”<br/></span></p>
<p>根據數據表中的特徵，DistanceSensor的lookupTable字段已經實現。wb_distance_sensor_get_value函數返回測量的電壓/強度。 要轉換這些值，請使用以下公式：</p>
<ul>
<li>Convert meters to voltage:<span> </span><code>y(x) = 0.5131*x^(-0.5735)-0.6143</code></li>
<li>Convert voltage to meters:<span> </span><code>y(x) = 0.1594*x^(-0.8533)-0.02916</code><code></code></li>
</ul>
<p><strong>Sharp GP2Y0A710K0F</strong></p>
<p><strong><img alt="sharp_GP2Y0A710K0F.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/sharp_GP2Y0A710K0F.thumbnail.png"/></strong></p>
<p>Sharp GP2Y0A710K0F是一種測距傳感器單元，由PSD（位置敏感檢測器），IR-LED（紅外發光二極管）和信號處理電路的集成組合組成。 由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。 該設備輸出與檢測距離相對應的電壓。 因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<p>有效範圍：100至550 [cm]<br/>輸出類型：類比<br/>響應時間：21 [ms]<br/>啟動延遲：26 [ms]<br/>平均消耗：30 [mA]</p>
<p>原型SharpGP2Y0A710K0F {<br/>   SFVec3f轉換0 0 0<br/>   旋轉旋轉0 1 0 0<br/>   SFString名稱“夏普的紅外傳感器GP2Y0A710K0F”</p>
<p>根據數據表中的特徵，DistanceSensor的lookupTable字段已經實現。wb_distance_sensor_get_value函數返回測量的電壓/強度。 要轉換這些值，請使用以下公式：</p>
<ul>
<li>Convert meters to voltage:<span> </span><code>y(x) = 1.962*x^(-0.5214)+0.4926</code></li>
<li>Convert voltage to meters:<span> </span><code>y(x) = 20.24*x^(-4.76)+0.6632</code></li>
</ul><h1>python 更新至3.8.2</h1>
<p>1.進入 <a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/ </a></p>
<p>2.下載<a href="/get_page/python%20%E6%9B%B4%E6%96%B0%E8%87%B33.8.2/Windows x86-64 executable installer">Windows x86-64 executable installer</a></p>
<p>3.下載完成後開啟，選擇Customize installation選項</p>
<p><img alt="" height="251" src="/images/1.PNG" width="401"/></p>
<p>4.不要勾選pip選項，接著按下next</p>
<p><img alt="" height="291" src="/images/3.PNG" width="470"/></p>
<p>5.選擇路徑將python安裝至可攜式系統中的Y槽下</p>
<p>6.接著開啟start_mdecourse.bat批次檔</p>
<p>7.將<span>start_mdecourse.bat批次檔中的py373改為安裝python 3.8.2版本的資料夾</span></p>
<p><span>8.將安裝的版本資料夾取名為py382</span></p>
<p><img alt="" height="490" src="/images/2.PNG" width="800"/></p>
<p>8.執行stop.bat批次檔後重新啟動start_mdecourse(為了讓檔案重新讀取)<br/><br/></p>
<p>9.輸入get-pip.py，開始安裝pip工具</p>
<p>10.安裝cmsimde所需模組</p>
<p><img alt="" height="20" src="/images/4.PNG" width="536"/></p>